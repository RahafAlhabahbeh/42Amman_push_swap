NAME = push_swap
CC = cc
CFLAGS = -Wall -Werror -Wextra

# Directories
OBJDIR = obj
LIBFTDIR = Libft

# Source files for push_swap (including the one with main)
SRCS = push_swap.c handle_errors.c init_a_to_b.c init_b_to_a.c \
       push.c rev_rotate.c rotate.c sort_stacks.c sort_three.c \
       stack_init.c stack_utils.c swap.c

# Object files generated from the source files
OBJS = $(SRCS:%.c=$(OBJDIR)/%.o)

# Build the push_swap executable
all: $(NAME)

$(NAME): $(OBJS)
	$(MAKE) -C $(LIBFTDIR)
	$(CC) $(CFLAGS) -o $(NAME) $(OBJS) -L$(LIBFTDIR) -lft

# Compile each .c file into .o files
$(OBJDIR)/%.o:%.c
	@mkdir -p $(OBJDIR)
	$(CC) -c $(CFLAGS) $< -o $@

# Clean object files
clean:
	cd $(LIBFTDIR) && make clean
	rm -rf $(OBJDIR)

# Remove all files generated by make
fclean: clean
	cd $(LIBFTDIR) && make fclean
	rm -f $(NAME)

# Rebuild everything from scratch
re: fclean all

.PHONY: all clean fclean re
